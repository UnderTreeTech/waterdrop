name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest

    services:
      mysql:
        # Docker Hub image
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options:
          --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=10
          --mysql-cmd="mysqld" --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

      etcd:
        # Docker Hub image
        image: bitnami/etcd:3.5.0
        env:
          ETCD_ADVERTISE_CLIENT_URLS: "http://0.0.0.0:2379"
          ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
          ETCDCTL_API: "3"
          ALLOW_NONE_AUTHENTICATION: "yes"
        ports:
          - 2379:2379

    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Install goimports
      run: go get golang.org/x/tools/cmd/goimports

    - name: Install go ci lint
      run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.35.2

    - name: Run Linter
      run: golangci-lint run --timeout=10m -v --disable-all --enable=govet --enable=gofmt --enable=goimports --enable=ineffassign --enable=misspell --enable=staticcheck

    - name: Test
      run: go test -race -coverprofile=coverage.txt -covermode=atomic ./pkg/...
      
    - name: Codecov
      uses: codecov/codecov-action@v1.0.14
